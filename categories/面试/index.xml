<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>面试 on Quguang 学习笔记</title>
    <link>https://techqu.github.io/categories/%E9%9D%A2%E8%AF%95/</link>
    <description>Recent content in 面试 on Quguang 学习笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 17 May 2019 18:26:55 +0800</lastBuildDate>
    
	<atom:link href="https://techqu.github.io/categories/%E9%9D%A2%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java面试-高并发-MySQL读写分离</title>
      <link>https://techqu.github.io/post/java-interview-mysql-shading05/</link>
      <pubDate>Fri, 17 May 2019 18:26:55 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-interview-mysql-shading05/</guid>
      <description>&lt;h2 id=&#34;1-面试题&#34;&gt;1、面试题&lt;/h2&gt;

&lt;p&gt;你们有没有做MySQL读写分离？如何实现mysql的读写分离？MySQL主从复制原理的是啥？如何解决mysql主从同步的延时问题？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java面试-高并发-Mysql全局唯一的id</title>
      <link>https://techqu.github.io/post/java-interview-mysql-shading04/</link>
      <pubDate>Fri, 17 May 2019 18:19:24 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-interview-mysql-shading04/</guid>
      <description>&lt;h2 id=&#34;1-面试题&#34;&gt;1、面试题&lt;/h2&gt;

&lt;p&gt;分库分表之后，id主键如何处理？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java面试-高并发-Mysql 动态扩容缩容的分库分表方案</title>
      <link>https://techqu.github.io/post/java-interview-mysql-shading03/</link>
      <pubDate>Fri, 17 May 2019 17:41:34 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-interview-mysql-shading03/</guid>
      <description>&lt;h2 id=&#34;1-面试题&#34;&gt;1、面试题&lt;/h2&gt;

&lt;p&gt;如何设计可以动态扩容缩容的分库分表方案？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java面试-高并发-Mysql-怎么把你那个单库单表的系统给迁移到分库分表上</title>
      <link>https://techqu.github.io/post/java-interview-mysql-shading02/</link>
      <pubDate>Fri, 17 May 2019 17:30:42 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-interview-mysql-shading02/</guid>
      <description>&lt;h2 id=&#34;1-面试题&#34;&gt;1、面试题&lt;/h2&gt;

&lt;p&gt;现在有一个未分库分表的系统，未来要分库分表，如何设计才可以让系统从未分库分表动态切换到分库分表上？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java面试-高并发-Mysql 分库分表</title>
      <link>https://techqu.github.io/post/java-interview-mysql-shading01/</link>
      <pubDate>Fri, 17 May 2019 16:12:09 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-interview-mysql-shading01/</guid>
      <description>&lt;h2 id=&#34;1-面试题&#34;&gt;1、面试题&lt;/h2&gt;

&lt;p&gt;为什么要分库分表（设计高并发系统的时候，数据库层面该如何设计）？用过哪些分库分表中间件？不同的分库分表中间件都有什么优点和缺点？你们具体是如何对数据库如何进行垂直拆分或水平拆分的？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java面试-高并发-redis的持久化</title>
      <link>https://techqu.github.io/post/java-interview-cache06/</link>
      <pubDate>Thu, 16 May 2019 18:11:25 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-interview-cache06/</guid>
      <description>01_面试题以及解答思路介绍 1、面试题 redis的持久化有哪几种方式？不同的持久化机制都有什么优缺点？持久化机制具体底层是如何实现的？ 2、面</description>
    </item>
    
    <item>
      <title>Java面试-高并发-如何保证Redis的高并发和高可用</title>
      <link>https://techqu.github.io/post/java-interview-cache05/</link>
      <pubDate>Thu, 16 May 2019 17:48:03 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-interview-cache05/</guid>
      <description>&lt;h2 id=&#34;01-面试题以及解答思路介绍&#34;&gt;01_面试题以及解答思路介绍&lt;/h2&gt;

&lt;p&gt;1、面试题&lt;/p&gt;

&lt;p&gt;如何保证Redis的高并发和高可用？redis的主从复制原理能介绍一下么？redis的哨兵原理能介绍一下么？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java面试-高并发-redis的过期策略</title>
      <link>https://techqu.github.io/post/java-interview-cache04/</link>
      <pubDate>Thu, 16 May 2019 17:47:24 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-interview-cache04/</guid>
      <description>1、面试题 redis的过期策略都有哪些？内存淘汰机制都有哪些？手写一下LRU代码实现？ 2、面试官心里分析 1）老师啊，我往redis里写的数据</description>
    </item>
    
    <item>
      <title>Java面试-高并发-redis 数据类型</title>
      <link>https://techqu.github.io/post/java-interview-cache03/</link>
      <pubDate>Thu, 16 May 2019 17:38:03 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-interview-cache03/</guid>
      <description>&lt;h3 id=&#34;1-面试题&#34;&gt;1、面试题&lt;/h3&gt;

&lt;p&gt;redis都有哪些数据类型？分别在哪些场景下使用比较合适？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java面试-高并发-为什么redis是单线程的但是还可以支撑高并发</title>
      <link>https://techqu.github.io/post/java-interview-cache02/</link>
      <pubDate>Thu, 16 May 2019 17:28:03 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-interview-cache02/</guid>
      <description>&lt;h3 id=&#34;1-面试题&#34;&gt;1、面试题&lt;/h3&gt;

&lt;p&gt;redis和memcached有什么区别？redis的线程模型是什么？为什么单线程的redis比多线程的memcached效率要高得多（为什么redis是单线程的但是还可以支撑高并发）？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java面试-高并发-缓存是如何使用的？</title>
      <link>https://techqu.github.io/post/java-interview-cache01/</link>
      <pubDate>Thu, 16 May 2019 17:18:03 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-interview-cache01/</guid>
      <description>&lt;h3 id=&#34;1-面试题&#34;&gt;1、面试题&lt;/h3&gt;

&lt;p&gt;在项目中缓存是如何使用的？缓存如果使用不当会造成什么后果？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java面试-高并发-MQ自己设计一个(7)</title>
      <link>https://techqu.github.io/post/java-interview-mq07/</link>
      <pubDate>Wed, 15 May 2019 20:36:47 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-interview-mq07/</guid>
      <description>&lt;h3 id=&#34;1-面试题&#34;&gt;1、面试题&lt;/h3&gt;

&lt;p&gt;如果让你写一个消息队列，该如何进行架构设计啊？说一下你的思路&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java面试-高并发-MQ延时以及过期失效(6)</title>
      <link>https://techqu.github.io/post/java-interview-mq06/</link>
      <pubDate>Wed, 15 May 2019 19:36:47 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-interview-mq06/</guid>
      <description>&lt;h3 id=&#34;1-面试题&#34;&gt;1、面试题&lt;/h3&gt;

&lt;p&gt;如何解决消息队列的延时以及过期失效问题？消息队列满了以后该怎么处理？有几百万消息持续积压几小时，说说怎么解决？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java面试-高并发-MQ消息的顺序性(5)</title>
      <link>https://techqu.github.io/post/java-interview-mq05/</link>
      <pubDate>Wed, 15 May 2019 18:36:47 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-interview-mq05/</guid>
      <description>&lt;h3 id=&#34;1-面试题&#34;&gt;1、面试题&lt;/h3&gt;

&lt;p&gt;如何保证消息的顺序性？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java面试-高并发-MQ可靠性传输(4)</title>
      <link>https://techqu.github.io/post/java-interview-mq04/</link>
      <pubDate>Wed, 15 May 2019 17:36:47 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-interview-mq04/</guid>
      <description>&lt;h3 id=&#34;1-面试题&#34;&gt;1、面试题&lt;/h3&gt;

&lt;p&gt;如何保证消息的可靠性传输（如何处理消息丢失的问题）？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java面试-高并发-MQ重复消费(3)</title>
      <link>https://techqu.github.io/post/java-interview-mq03/</link>
      <pubDate>Wed, 15 May 2019 16:36:47 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-interview-mq03/</guid>
      <description>&lt;h3 id=&#34;1-面试题&#34;&gt;1、面试题&lt;/h3&gt;

&lt;p&gt;如何保证消息不被重复消费啊（如何保证消息消费时的幂等性）？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java面试-高并发-MQ的高可用(2)</title>
      <link>https://techqu.github.io/post/java-interview-mq02/</link>
      <pubDate>Wed, 15 May 2019 15:36:47 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-interview-mq02/</guid>
      <description>&lt;h3 id=&#34;1-面试题&#34;&gt;1、面试题&lt;/h3&gt;

&lt;p&gt;如何保证消息队列的高可用啊？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java面试-高并发-MQ技术选型(1)</title>
      <link>https://techqu.github.io/post/java-interview-mq01/</link>
      <pubDate>Wed, 15 May 2019 14:36:47 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-interview-mq01/</guid>
      <description>&lt;h3 id=&#34;1-面试题&#34;&gt;1、面试题&lt;/h3&gt;

&lt;p&gt;为什么使用消息队列啊？消息队列有什么优点和缺点啊？kafka、activemq、rabbitmq、rocketmq都有什么区别以及适合哪些场景？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>互联网Java工程师面试突击训练-课程目录</title>
      <link>https://techqu.github.io/post/java-interview-shishan01/</link>
      <pubDate>Wed, 15 May 2019 13:32:03 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-interview-shishan01/</guid>
      <description>&lt;p&gt;因为java面试题是一个较为大的体系，所以我们会拆分为几季来讲解，预计是会推出3季，本次是第一季，第一季课程包含的内容如下：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java Interview Resource List</title>
      <link>https://techqu.github.io/post/java-interview-resource-list/</link>
      <pubDate>Fri, 15 Feb 2019 17:40:34 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-interview-resource-list/</guid>
      <description>&lt;p&gt;总结了一些面试资源清单&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>你应该知道的 RPC 原理</title>
      <link>https://techqu.github.io/post/java-rpc/</link>
      <pubDate>Fri, 15 Feb 2019 11:10:56 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-rpc/</guid>
      <description>&lt;p&gt;在校期间大家都写过不少程序，比如写个hello world服务类，然后本地调用下，如下所示。这些程序的特点是服务消费方和服务提供方是本地调用关系。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Java&#34;&gt;
 public class Test {
     public static void main(String[] args) {
         HelloWorldService helloWorldService = new HelloWorldServiceImpl();
         helloWorldService.sayHello(&amp;quot;test&amp;quot;);
     }
 }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;而一旦踏入公司尤其是大型互联网公司就会发现，公司的系统都由成千上万大大小小的服务组成，各服务部署在不同的机器上，由不同的团队负责。这时就会遇到两个问题：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;要搭建一个新服务，免不了需要依赖他人的服务，而现在他人的服务都在远端，怎么调用？&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;其它团队要使用我们的服务，我们的服务该怎么发布以便他人调用？&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;下文我们将对这两个问题展开探讨。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java并发编程：线程池的使用</title>
      <link>https://techqu.github.io/post/java-thread-pool/</link>
      <pubDate>Thu, 14 Feb 2019 15:04:47 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/java-thread-pool/</guid>
      <description>&lt;p&gt;在前面的文章中，我们使用线程的时候就去创建一个线程，这样实现起来非常简便，但是就会有一个问题：&lt;/p&gt;

&lt;p&gt;　　如果并发的线程数量很多，并且每个线程都是执行一个时间很短的任务就结束了，这样频繁创建线程就会大大降低系统的效率，因为频繁创建线程和销毁线程需要时间。&lt;/p&gt;

&lt;p&gt;　　那么有没有一种办法使得线程可以复用，就是执行完一个任务，并不被销毁，而是可以继续执行其他的任务？&lt;/p&gt;

&lt;p&gt;　　在Java中可以通过线程池来达到这样的效果。今天我们就来详细讲解一下Java的线程池，首先我们从最核心的ThreadPoolExecutor类中的方法讲起，然后再讲述它的实现原理，接着给出了它的使用示例，最后讨论了一下如何合理配置线程池的大小。&lt;/p&gt;

&lt;p&gt;　　若有不正之处请多多谅解，并欢迎批评指正。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>最新拼多多技术部面试题：幻读&#43;分段锁&#43;死锁&#43;Spring Cloud&#43;秒杀</title>
      <link>https://techqu.github.io/post/interview-exp-pdd/</link>
      <pubDate>Wed, 13 Feb 2019 08:30:08 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/interview-exp-pdd/</guid>
      <description>一面 简短自我介绍 事务的ACID，其中把事务的隔离性详细解释一遍 脏读、幻影读、不可重复读 红黑树、二叉树的算法 平常用到哪些集合类？ArrayLi</description>
    </item>
    
    <item>
      <title>5年经验Java程序员帝都面试20天，拿下数个offer，最终选择了百度</title>
      <link>https://techqu.github.io/post/interview-exp-baidu/</link>
      <pubDate>Wed, 13 Feb 2019 07:56:41 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/interview-exp-baidu/</guid>
      <description>&lt;p&gt;从事Java开发也有5年经验了，7月初来到帝都，开启面试经历，前后20天左右，主面互联网公司，一二线大公司或者是融资中的创业公司都面试过，拿了一些offer，其中包括奇虎360，最后综合决定还是去百度了。&lt;/p&gt;

&lt;p&gt;首先不同面试官面试风格一定不同，我这里就是总结这些天面试Java开发过程中的大多数问题，综合分类有Java基础，框架，多线程，网络通信，数据库以及设计模式，算法等几个模块。&lt;/p&gt;

&lt;p&gt;一名3年工作经验的Java程序员应该具备的技能，这可能是Java程序员们比较关心的内容。我这里要说明一下，以下列举的内容不是都要会的东西&amp;mdash;-但是如果你掌握得越多，最终能得到的评价、拿到的薪水势必也越高。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java 中15种锁的介绍：公平锁，可重入锁等等……</title>
      <link>https://techqu.github.io/post/15-lock-in-java/</link>
      <pubDate>Sat, 19 Jan 2019 07:56:14 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/15-lock-in-java/</guid>
      <description>&lt;p&gt;Java 中15种锁的介绍&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>简历模版</title>
      <link>https://techqu.github.io/post/resume/</link>
      <pubDate>Wed, 19 Dec 2018 21:45:56 +0800</pubDate>
      
      <guid>https://techqu.github.io/post/resume/</guid>
      <description>&lt;p&gt;本文是一个markdown风格语法的简历模版，转载自网络&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>