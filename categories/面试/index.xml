<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>面试 on Huabing Blog</title>
    <link>https://zhaohuabing.com/categories/%E9%9D%A2%E8%AF%95/</link>
    <description>Recent content in 面试 on Huabing Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 14 Feb 2019 15:04:47 +0800</lastBuildDate>
    
	<atom:link href="https://zhaohuabing.com/categories/%E9%9D%A2%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java并发编程：线程池的使用</title>
      <link>https://zhaohuabing.com/post/java-thread-pool/</link>
      <pubDate>Thu, 14 Feb 2019 15:04:47 +0800</pubDate>
      
      <guid>https://zhaohuabing.com/post/java-thread-pool/</guid>
      <description>&lt;p&gt;在前面的文章中，我们使用线程的时候就去创建一个线程，这样实现起来非常简便，但是就会有一个问题：&lt;/p&gt;

&lt;p&gt;　　如果并发的线程数量很多，并且每个线程都是执行一个时间很短的任务就结束了，这样频繁创建线程就会大大降低系统的效率，因为频繁创建线程和销毁线程需要时间。&lt;/p&gt;

&lt;p&gt;　　那么有没有一种办法使得线程可以复用，就是执行完一个任务，并不被销毁，而是可以继续执行其他的任务？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>全面理解Java内存模型</title>
      <link>https://zhaohuabing.com/post/jmm-java/</link>
      <pubDate>Thu, 14 Feb 2019 11:26:21 +0800</pubDate>
      
      <guid>https://zhaohuabing.com/post/jmm-java/</guid>
      <description>&lt;p&gt;Java内存模型即Java Memory Model，简称JMM。&lt;/p&gt;

&lt;p&gt;JMM定义了Java 虚拟机(JVM)在计算机内存(RAM)中的工作方式。JVM是整个计算机虚拟模型，所以JMM是隶属于JVM的。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>