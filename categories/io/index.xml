<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>io on quguang&#39;s blog</title>
    <link>/categories/io/</link>
    <description>Recent content in io on quguang&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 27 Dec 2018 18:05:02 +0800</lastBuildDate>
    
	<atom:link href="/categories/io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java Io</title>
      <link>/post/java-io/</link>
      <pubDate>Thu, 27 Dec 2018 18:05:02 +0800</pubDate>
      
      <guid>/post/java-io/</guid>
      <description>&lt;p&gt;Java 提供了哪些IO方式？NIO如何实现多路复用？&lt;/p&gt;

&lt;p&gt;首先、传统的java.io包，它基于流模型实现，提供了，比如File抽象、输入输出流等。交互方式是同步、阻塞的方式。也就是说，在读取输入流或者写入输出流时，在写、读动作完成之前，线程会一直阻塞在那里，它们之间的调用时可靠的线性顺序。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>